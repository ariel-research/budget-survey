# ==============================================
# Budget Survey Application Environment Variables
# ==============================================
# Copy this file to .env and customize the values for your environment

# ==============================================
# Application Configuration
# ==============================================
FLASK_ENV=development
FLASK_SECRET_KEY=your-super-secret-key-change-this-in-production

# Application ports
APP_PORT=5001
DEV_APP_PORT=5000

# ==============================================
# Database Configuration
# ==============================================
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_DATABASE=survey
MYSQL_USER=survey
MYSQL_PASSWORD=survey_password
MYSQL_ROOT_PASSWORD=root_password

# ==============================================
# Production Database Configuration (AWS RDS example)
# ==============================================
# MYSQL_HOST=budget-survey-db.cluster-xyz.us-east-1.rds.amazonaws.com
# MYSQL_PORT=3306
# MYSQL_DATABASE=survey
# MYSQL_USER=survey_user
# MYSQL_PASSWORD=secure_production_password
# MYSQL_ROOT_PASSWORD=secure_root_password

# ==============================================
# Panel4All Integration (Optional)
# ==============================================
# Panel4All settings are configured in config.py
# You can override them here if needed
# PANEL4ALL_BASE_URL=http://www.panel4all.co.il/survey_runtime/external_survey_status.php

# ==============================================
# Survey Configuration
# ==============================================
# Survey base URL - used for redirects and links
SURVEY_BASE_URL=http://localhost:5001

# ==============================================
# Security Configuration
# ==============================================
# Generate a secure secret key for production:
# python -c "import secrets; print(secrets.token_hex(32))"

# ==============================================
# Development Only
# ==============================================
# Set to true to enable debug mode (never use in production)
DEBUG=true

# ==============================================
# AWS EC2 Production Example
# ==============================================
# FLASK_ENV=production
# FLASK_SECRET_KEY=your-64-character-hex-secret-key-generated-securely
# MYSQL_HOST=budget-survey-db.cluster-xyz.us-east-1.rds.amazonaws.com
# MYSQL_DATABASE=survey
# MYSQL_USER=survey_user
# MYSQL_PASSWORD=your-secure-database-password
# SURVEY_BASE_URL=https://your-domain.com
# APP_PORT=5001
# DEBUG=false

# ==============================================
# Docker Compose Configuration
# ==============================================
# These variables are used by docker-compose.yml
# Most have sensible defaults, but you can override them here

# Database container configuration
# MYSQL_HOST=db  # This should be 'db' when using docker-compose
# MYSQL_PORT=3306
# MYSQL_DATABASE=survey
# MYSQL_USER=survey
# MYSQL_PASSWORD=survey_password
# MYSQL_ROOT_PASSWORD=root_password

# Application container configuration
# APP_PORT=5001
# DEV_APP_PORT=5000

# ==============================================
# Logging Configuration
# ==============================================
# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ==============================================
# Additional Notes
# ==============================================
# 1. Never commit your actual .env file to version control
# 2. Use strong, unique passwords for production
# 3. Consider using Docker secrets for sensitive data in production
# 4. Regularly rotate your secret keys and passwords
# 5. Use environment-specific .env files (.env.development, .env.production)
